<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - Webuzo SaaS</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        .navbar-custom {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }
        .card {
            border: none;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }
        .chart-container {
            position: relative;
            height: 400px;
        }
        .report-stats {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-radius: 10px;
            padding: 1rem;
        }
        .metric-card {
            transition: transform 0.2s;
        }
        .metric-card:hover {
            transform: translateY(-2px);
        }
    </style>
</head>
<body>
    <!-- Navigation Bar -->
    <nav class="navbar navbar-expand-lg navbar-dark navbar-custom">
        <div class="container">
            <a class="navbar-brand" href="/admin/dashboard">
                <i class="fas fa-server me-2"></i>Hospx
            </a>
            
            <div class="navbar-nav me-auto">
                <a class="nav-link" href="/admin/dashboard">
                    <i class="fas fa-tachometer-alt me-1"></i>Dashboard
                </a>
                <a class="nav-link" href="/admin/users">
                    <i class="fas fa-users me-1"></i>Users
                </a>
                <a class="nav-link" href="/admin/databases">
                    <i class="fas fa-database me-1"></i>Databases
                </a>
                <a class="nav-link" href="/admin/payments">
                    <i class="fas fa-credit-card me-1"></i>Payments
                </a>
                <a class="nav-link" href="/admin/commissions">
                    <i class="fas fa-percentage me-1"></i>Commissions
                </a>
                <a class="nav-link active" href="/admin/reports">
                    <i class="fas fa-chart-bar me-1"></i>Reports
                </a>
            </div>
            
            <div class="navbar-nav ms-auto">
                <div class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">
                        <i class="fas fa-user me-1"></i><%= user.full_name %>
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="/change-password">
                            <i class="fas fa-key me-2"></i>Change Password
                        </a></li>
                        <li><hr class="dropdown-divider"></li>
                        <li>
                            <form action="/logout" method="POST" class="d-inline">
                                <button type="submit" class="dropdown-item">
                                    <i class="fas fa-sign-out-alt me-2"></i>Logout
                                </button>
                            </form>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </nav>

    <!-- Flash Messages -->
    <% if (typeof success_msg !== 'undefined' && success_msg.length > 0) { %>
        <div class="alert alert-success alert-dismissible fade show m-3" role="alert">
            <%= success_msg %>
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    <% } %>

    <% if (typeof error_msg !== 'undefined' && error_msg.length > 0) { %>
        <div class="alert alert-danger alert-dismissible fade show m-3" role="alert">
            <%= error_msg %>
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    <% } %>

    <div class="container mt-4">
        <!-- Header -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h2><i class="fas fa-chart-bar me-2"></i>Reports & Analytics</h2>
                        <p class="text-muted">Comprehensive business insights and analytics</p>
                    </div>
                    <div>
                        <!-- <button class="btn btn-outline-primary" onclick="window.print()">
                            <i class="fas fa-print me-2"></i>Print Report
                        </button> -->
                    </div>
                </div>
            </div>
        </div>

        <!-- Quick Analytics Summary -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="card border-primary">
                    <div class="card-header bg-primary text-white">
                        <h5 class="mb-0"><i class="fas fa-analytics me-2"></i>SaaS Platform Analytics</h5>
                    </div>
                    <div class="card-body">
                        <div class="row g-3">
                            <div class="col-md-2 text-center">
                                <div class="border-end">
                                    <h4 class="text-primary mb-1"><%= (pagination && pagination.totalPayments) || 0 %></h4>
                                    <small class="text-muted">Total Transactions</small>
                                </div>
                            </div>
                            <div class="col-md-2 text-center">
                                <div class="border-end">
                                    <h4 class="text-success mb-1">
                                        <%= (revenueReport && revenueReport.monthly_data && revenueReport.monthly_data.length > 0) ? 
                                            revenueReport.monthly_data[0].payment_count : 0 %>
                                    </h4>
                                    <small class="text-muted">This Month</small>
                                </div>
                            </div>
                            <div class="col-md-2 text-center">
                                <div class="border-end">
                                    <h4 class="text-info mb-1"><%= ((revenueReport && revenueReport.average_order) || 0).toLocaleString() %> BDT</h4>
                                    <small class="text-muted">Avg Order Value</small>
                                </div>
                            </div>
                            <div class="col-md-2 text-center">
                                <div class="border-end">
                                    <h4 class="text-warning mb-1">
                                        <%= (paymentStats && paymentStats.payment_methods && paymentStats.payment_methods.length > 0) ? 
                                            paymentStats.payment_methods[0].method.toUpperCase() : 'N/A' %>
                                    </h4>
                                    <small class="text-muted">Top Payment Method</small>
                                </div>
                            </div>
                            <div class="col-md-2 text-center">
                                <div class="border-end">
                                    <h4 class="text-danger mb-1"><%= (commissionStats && commissionStats.pending_commissions) || 0 %></h4>
                                    <small class="text-muted">Pending Commissions</small>
                                </div>
                            </div>
                            <div class="col-md-2 text-center">
                                <h4 class="text-secondary mb-1">
                                    <%= (revenueReport && revenueReport.top_users && revenueReport.top_users.length > 0) ? 
                                        revenueReport.top_users.length : 0 %>
                                </h4>
                                <small class="text-muted">Active Users</small>
                            </div>
                        </div>
                        <hr class="my-3">
                        <div class="row">
                            <div class="col-12">
                                <div class="text-center">
                                    <h6 class="text-muted mb-2">Platform Status</h6>
                                    <div class="d-flex justify-content-center gap-3">
                                        <span class="badge bg-success px-3 py-2">
                                            <i class="fas fa-server me-1"></i>System Online
                                        </span>
                                        <span class="badge bg-info px-3 py-2">
                                            <i class="fas fa-database me-1"></i>Database Active
                                        </span>
                                        <span class="badge bg-warning px-3 py-2">
                                            <i class="fas fa-credit-card me-1"></i>Payments Processing
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Date Filter -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <form method="GET" action="/admin/reports" id="reportFilter">
                            <div class="row g-3 align-items-end">
                                <div class="col-md-3">
                                    <label for="date_from" class="form-label">Date From</label>
                                    <input type="date" class="form-control" id="date_from" name="date_from" 
                                           value="<%= (filters && filters.date_from && filters.date_from !== 'undefined') ? filters.date_from : '' %>"
                                           max="<%= new Date().toISOString().split('T')[0] %>">
                                    <small class="text-muted">Optional: Filter from specific date</small>
                                </div>
                                <div class="col-md-3">
                                    <label for="date_to" class="form-label">Date To</label>
                                    <input type="date" class="form-control" id="date_to" name="date_to" 
                                           value="<%= (filters && filters.date_to && filters.date_to !== 'undefined') ? filters.date_to : '' %>"
                                           max="<%= new Date().toISOString().split('T')[0] %>">
                                    <small class="text-muted">Optional: Filter to specific date</small>
                                </div>
                                <div class="col-md-3">
                                    <label for="report_type" class="form-label">Report Type</label>
                                    <select class="form-select" id="report_type" name="report_type">
                                        <option value="overview" <%= (filters && filters.report_type === 'overview') ? 'selected' : '' %>>Overview</option>
                                        <option value="revenue" <%= (filters && filters.report_type === 'revenue') ? 'selected' : '' %>>Revenue</option>
                                        <option value="users" <%= (filters && filters.report_type === 'users') ? 'selected' : '' %>>Users</option>
                                        <option value="commissions" <%= (filters && filters.report_type === 'commissions') ? 'selected' : '' %>>Commissions</option>
                                    </select>
                                </div>
                                <div class="col-md-3">
                                    <button type="submit" class="btn btn-primary w-100">
                                        <i class="fas fa-search me-2"></i>Generate Report
                                    </button>
                                </div>
                            </div>
                            <div class="row mt-3">
                                <div class="col-12">
                                    <div class="btn-group" role="group" aria-label="Quick filters">
                                        <button type="button" class="btn btn-outline-secondary btn-sm" onclick="setDateRange('today')">
                                            <i class="fas fa-calendar-day me-1"></i>Today
                                        </button>
                                        <button type="button" class="btn btn-outline-secondary btn-sm" onclick="setDateRange('week')">
                                            <i class="fas fa-calendar-week me-1"></i>This Week
                                        </button>
                                        <button type="button" class="btn btn-outline-secondary btn-sm" onclick="setDateRange('month')">
                                            <i class="fas fa-calendar-alt me-1"></i>This Month
                                        </button>
                                        <button type="button" class="btn btn-outline-secondary btn-sm" onclick="setDateRange('year')">
                                            <i class="fas fa-calendar me-1"></i>This Year
                                        </button>
                                        <button type="button" class="btn btn-outline-secondary btn-sm" onclick="clearDates()">
                                            <i class="fas fa-times me-1"></i>Clear Dates
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Summary Statistics -->
        <div class="row g-4 mb-4">
            <div class="col-lg-3 col-md-6">
                <div class="card metric-card">
                    <div class="card-body report-stats">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h4 class="mb-0 text-primary"><%= ((paymentStats && paymentStats.total_revenue) || 0).toLocaleString() %> BDT</h4>
                                <p class="mb-0">Total Revenue</p>
                                <small class="text-success">
                                    <i class="fas fa-arrow-up"></i> 
                                    <%= ((paymentStats && paymentStats.growth) || 0).toFixed(1) %>% from last month
                                </small>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-money-bill-wave fa-2x text-primary"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-3 col-md-6">
                <div class="card metric-card">
                    <div class="card-body report-stats">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h4 class="mb-0 text-success"><%= (paymentStats && paymentStats.total_payments) || 0 %></h4>
                                <p class="mb-0">Total Payments</p>
                                <small class="text-info">
                                    <i class="fas fa-clock"></i> 
                                    <%= (paymentStats && paymentStats.pending_payments) || 0 %> pending
                                </small>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-credit-card fa-2x text-success"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-3 col-md-6">
                <div class="card metric-card">
                    <div class="card-body report-stats">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h4 class="mb-0 text-info"><%= ((commissionStats && commissionStats.total_amount) || 0).toLocaleString() %> BDT</h4>
                                <p class="mb-0">Commission Paid</p>
                                <small class="text-warning">
                                    <i class="fas fa-percentage"></i> 
                                    <%= (commissionStats && commissionStats.pending_amount) || 0 %> BDT pending
                                </small>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-percentage fa-2x text-info"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-3 col-md-6">
                <div class="card metric-card">
                    <div class="card-body report-stats">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h4 class="mb-0 text-warning"><%= ((revenueReport && revenueReport.average_order) || 0).toLocaleString() %> BDT</h4>
                                <p class="mb-0">Average Order</p>
                                <small class="text-muted">
                                    <i class="fas fa-calculator"></i> 
                                    Per transaction
                                </small>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-calculator fa-2x text-warning"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Charts Row -->
        <div class="row g-4 mb-4">
            <!-- Revenue Chart -->
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-header">
                        <h5><i class="fas fa-chart-line me-2"></i>Revenue Trend</h5>
                    </div>
                    <div class="card-body">
                        <div class="chart-container">
                            <canvas id="revenueChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Payment Methods -->
            <div class="col-lg-4">
                <div class="card">
                    <div class="card-header">
                        <h5><i class="fas fa-pie-chart me-2"></i>Payment Methods</h5>
                    </div>
                    <div class="card-body">
                        <div class="chart-container">
                            <canvas id="paymentMethodChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Detailed Reports -->
        <div class="row g-4">
            <!-- Top Performers -->
            <div class="col-lg-6">
                <div class="card">
                    <div class="card-header">
                        <h5><i class="fas fa-trophy me-2"></i>Top Performers</h5>
                    </div>
                    <div class="card-body">
                        <% if (revenueReport && revenueReport.top_users && revenueReport.top_users.length > 0) { %>
                            <div class="table-responsive">
                                <table class="table table-sm">
                                    <thead>
                                        <tr>
                                            <th>Rank</th>
                                            <th>User</th>
                                            <th>Revenue</th>
                                            <th>Orders</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% revenueReport.top_users.forEach((user, index) => { %>
                                            <tr>
                                                <td>
                                                    <span class="badge <%= index === 0 ? 'bg-warning' : index === 1 ? 'bg-secondary' : index === 2 ? 'bg-info' : 'bg-light text-dark' %>">
                                                        <%= index + 1 %>
                                                    </span>
                                                </td>
                                                <td>
                                                    <div>
                                                        <div class="fw-semibold"><%= user.full_name %></div>
                                                        <small class="text-muted"><%= user.email %></small>
                                                    </div>
                                                </td>
                                                <td class="fw-semibold"><%= user.total_revenue %> BDT</td>
                                                <td><%= user.order_count %></td>
                                            </tr>
                                        <% }); %>
                                    </tbody>
                                </table>
                            </div>
                        <% } else { %>
                            <div class="text-center py-3">
                                <i class="fas fa-chart-bar fa-2x text-muted mb-2"></i>
                                <p class="text-muted">No performance data available</p>
                            </div>
                        <% } %>
                    </div>
                </div>
            </div>

            <!-- Commission Report -->
            <div class="col-lg-6">
                <div class="card">
                    <div class="card-header">
                        <h5><i class="fas fa-users me-2"></i>Commission Summary</h5>
                    </div>
                    <div class="card-body">
                        <% if (commissionReport && commissionReport.length > 0) { %>
                            <div class="table-responsive">
                                <table class="table table-sm">
                                    <thead>
                                        <tr>
                                            <th>User</th>
                                            <th>Referrals</th>
                                            <th>Commission</th>
                                            <th>Status</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% commissionReport.forEach(report => { %>
                                            <tr>
                                                <td>
                                                    <div class="fw-semibold"><%= report.user_name %></div>
                                                    <small class="text-muted"><%= report.user_email %></small>
                                                </td>
                                                <td><%= report.referral_count %></td>
                                                <td class="fw-semibold"><%= report.total_commission %> BDT</td>
                                                <td>
                                                    <span class="badge <%= report.status === 'paid' ? 'bg-success' : 'bg-warning' %>">
                                                        <%= report.status ? report.status.toUpperCase() : 'PENDING' %>
                                                    </span>
                                                </td>
                                            </tr>
                                        <% }); %>
                                    </tbody>
                                </table>
                            </div>
                        <% } else { %>
                            <div class="text-center py-3">
                                <i class="fas fa-percentage fa-2x text-muted mb-2"></i>
                                <p class="text-muted">No commission data available</p>
                            </div>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>

        <!-- Completed Payments Table -->
        <div class="row g-4 mt-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0"><i class="fas fa-check-circle me-2"></i>Completed Payments</h5>
                        <!-- <div class="col-md-4">
                            <form onsubmit="submitEmailSearch(); return false;" class="mb-0">
                                <div class="input-group">
                                    <span class="input-group-text">
                                        <i class="fas fa-search text-muted"></i>
                                    </span>
                                    <input type="text" class="form-control" id="emailSearch" placeholder="Search by user email..." 
                                           onkeyup="handleSearchKeyup(event)" autocomplete="off">
                                    <button class="btn btn-primary" type="submit" title="Search payments">
                                        <i class="fas fa-search"></i>
                                    </button>
                                    <button class="btn btn-outline-secondary" type="button" onclick="clearEmailSearch()" title="Clear search">
                                        <i class="fas fa-times"></i>
                                    </button>
                                </div>
                            </form>
                            <small class="text-muted mt-1">
                                Search will fetch all payments from database matching the email
                                <br><strong>Instructions:</strong> Type email and click search button or press Enter
                            </small>
                        </div> -->
                    </div>
                    <div class="card-body">
                        <div id="searchResultsInfo" class="mb-2" style="display: none;">
                            <small class="text-muted">
                                <span id="searchResultsCount">0</span> payment(s) found
                            </small>
                        </div>
                        <% if (typeof completedPayments !== 'undefined' && completedPayments && completedPayments.length > 0) { %>
                            <div class="table-responsive">
                                <table class="table table-striped table-hover">
                                    <thead class="table-dark">
                                        <tr>
                                            <th>Database</th>
                                            <th>Domain</th>
                                            <th>User</th>
                                            <th>Amount</th>
                                            <th>Method</th>
                                            <th>Transaction ID</th>
                                            <th>Date</th>
                                            <th>Status</th>
                                        </tr>
                                    </thead>
                                    <tbody id="paymentsTableBody">
                                        <% completedPayments.forEach(payment => { %>
                                            <tr>
                                                <td>
                                                    <span class="badge bg-info">
                                                        <i class="fas fa-database me-1"></i>
                                                        <%= payment.database_name || 'N/A' %>
                                                    </span>
                                                </td>
                                                <td>
                                                    <span class="badge bg-secondary">
                                                        <i class="fas fa-globe me-1"></i>
                                                        <%= payment.domain_name || 'N/A' %>
                                                    </span>
                                                </td>
                                                <td>
                                                    <div>
                                                        <div class="fw-semibold"><%= payment.user_name || 'N/A' %></div>
                                                        <small class="text-muted"><%= payment.user_email || 'N/A' %></small>
                                                    </div>
                                                </td>
                                                <td class="fw-bold text-success"><%= (payment.amount || 0).toLocaleString() %> BDT</td>
                                                <td>
                                                    <span class="badge bg-info">
                                                        <%= payment.method ? payment.method.toUpperCase() : 'N/A' %>
                                                    </span>
                                                </td>
                                                <td><code><%= payment.transaction_id || 'N/A' %></code></td>
                                                <td>
                                                    <%= payment.created_at ? new Date(payment.created_at).toLocaleDateString('en-GB', {
                                                        year: 'numeric',
                                                        month: 'short',
                                                        day: 'numeric',
                                                        hour: '2-digit',
                                                        minute: '2-digit'
                                                    }) : 'N/A' %>
                                                </td>
                                                <td>
                                                    <span class="badge bg-success">
                                                        <i class="fas fa-check me-1"></i>COMPLETED
                                                    </span>
                                                </td>
                                            </tr>
                                        <% }); %>
                                    </tbody>
                                </table>
                            </div>
                            
                            <!-- Dynamic Pagination -->
                            <% if (pagination && pagination.totalPages > 1) { %>
                                <div class="d-flex justify-content-between align-items-center mt-3">
                                    <div class="text-muted">
                                        Showing <%= (pagination.currentPage - 1) * pagination.limit + 1 %> to 
                                        <%= Math.min(pagination.currentPage * pagination.limit, pagination.totalPayments) %>
                                        of <%= pagination.totalPayments %> payments
                                    </div>
                                    <nav>
                                        <ul class="pagination mb-0">
                                            <% 
                                                // Clean filters to avoid undefined values
                                                const cleanFilters = {};
                                                if (filters && filters.date_from && filters.date_from !== 'undefined') {
                                                    cleanFilters.date_from = filters.date_from;
                                                }
                                                if (filters && filters.date_to && filters.date_to !== 'undefined') {
                                                    cleanFilters.date_to = filters.date_to;
                                                }
                                                if (filters && filters.report_type && filters.report_type !== 'undefined') {
                                                    cleanFilters.report_type = filters.report_type;
                                                }
                                                const filterString = Object.keys(cleanFilters).length > 0 ? 
                                                    '&' + new URLSearchParams(cleanFilters).toString() : '';
                                            %>
                                            
                                            <% if (pagination.hasPrev) { %>
                                                <li class="page-item">
                                                    <a class="page-link" href="?page=<%= pagination.prevPage %><%= filterString %>">
                                                        <i class="fas fa-chevron-left"></i> Previous
                                                    </a>
                                                </li>
                                            <% } else { %>
                                                <li class="page-item disabled">
                                                    <span class="page-link"><i class="fas fa-chevron-left"></i> Previous</span>
                                                </li>
                                            <% } %>
                                            
                                            <% 
                                                const startPage = Math.max(1, pagination.currentPage - 2);
                                                const endPage = Math.min(pagination.totalPages, pagination.currentPage + 2);
                                                
                                                for (let i = startPage; i <= endPage; i++) { 
                                            %>
                                                <li class="page-item <%= i === pagination.currentPage ? 'active' : '' %>">
                                                    <a class="page-link" href="?page=<%= i %><%= filterString %>">
                                                        <%= i %>
                                                    </a>
                                                </li>
                                            <% } %>
                                            
                                            <% if (pagination.hasNext) { %>
                                                <li class="page-item">
                                                    <a class="page-link" href="?page=<%= pagination.nextPage %><%= filterString %>">
                                                        Next <i class="fas fa-chevron-right"></i>
                                                    </a>
                                                </li>
                                            <% } else { %>
                                                <li class="page-item disabled">
                                                    <span class="page-link">Next <i class="fas fa-chevron-right"></i></span>
                                                </li>
                                            <% } %>
                                        </ul>
                                    </nav>
                                </div>
                            <% } %>
                        <% } else { %>
                            <div class="text-center py-5">
                                <i class="fas fa-credit-card fa-3x text-muted mb-3"></i>
                                <h5 class="text-muted">No Completed Payments</h5>
                                <p class="text-muted">No completed payment transactions found for the selected period.</p>
                            </div>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Hidden div to store chart data -->
    <div id="chartData" 
         data-revenue='<%- JSON.stringify((revenueReport && revenueReport.monthly_data) ? revenueReport.monthly_data : []) %>'
         data-payment-methods='<%- JSON.stringify((paymentStats && paymentStats.payment_methods) ? paymentStats.payment_methods : []) %>'
         style="display: none;"></div>
    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js" integrity="sha512-ElRFoEQdI5Ht6kZvyzXhYG9NqjtkmlkfYk0wr6wHxU9JEHakS7UJZNeml5ALk+8IKlU6jDgMabC3vkumRokgJA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    
    <script>
        // Initialize charts when everything is ready
        function initializeCharts() {
            // Check if Chart.js is loaded
            if (typeof Chart === 'undefined') {
                console.error('Chart.js library failed to load');
                return;
            }

            // Get chart data from data attributes with error handling
            const chartDataElement = document.getElementById('chartData');
            let revenueData = [];
            let paymentMethodData = [];
            
            try {
                revenueData = JSON.parse(chartDataElement.getAttribute('data-revenue') || '[]');
                paymentMethodData = JSON.parse(chartDataElement.getAttribute('data-payment-methods') || '[]');
            } catch (error) {
                console.warn('Error parsing chart data:', error);
                revenueData = [];
                paymentMethodData = [];
            }

            // Revenue Chart
            const revenueCanvas = document.getElementById('revenueChart');
            if (revenueCanvas) {
                const revenueCtx = revenueCanvas.getContext('2d');
                new Chart(revenueCtx, {
                    type: 'line',
                    data: {
                        labels: revenueData.map(item => item.month),
                        datasets: [{
                            label: 'Revenue (BDT)',
                            data: revenueData.map(item => item.revenue || 0),
                            borderColor: 'rgb(75, 192, 192)',
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            tension: 0.4
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            }

            // Payment Method Chart
            const paymentCanvas = document.getElementById('paymentMethodChart');
            if (paymentCanvas) {
                const paymentCtx = paymentCanvas.getContext('2d');
                new Chart(paymentCtx, {
                    type: 'doughnut',
                    data: {
                        labels: paymentMethodData.map(item => item.method),
                        datasets: [{
                            data: paymentMethodData.map(item => item.count || 0),
                            backgroundColor: [
                                '#FF6384',
                                '#36A2EB',
                                '#FFCE56',
                                '#4BC0C0',
                                '#9966FF'
                            ]
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false
                    }
                });
            }
        }

        // Wait for DOM and Chart.js to be ready
        document.addEventListener('DOMContentLoaded', function() {
            // Add a small delay to ensure Chart.js is fully loaded
            setTimeout(function() {
                initializeCharts();
            }, 100);
        });

        function exportReport(type) {
            const params = new URLSearchParams(window.location.search);
            params.set('export', type);
            window.open(`/admin/reports/export?${params.toString()}`, '_blank');
        }

        function generateCustomReport() {
            // Open modal for custom report generation
            alert('Custom report feature coming soon!');
        }

        // Date range helper functions
        function setDateRange(range) {
            const today = new Date();
            const dateFromInput = document.getElementById('date_from');
            const dateToInput = document.getElementById('date_to');
            
            let fromDate, toDate;
            
            switch(range) {
                case 'today':
                    fromDate = toDate = today.toISOString().split('T')[0];
                    break;
                case 'week':
                    fromDate = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 7).toISOString().split('T')[0];
                    toDate = today.toISOString().split('T')[0];
                    break;
                case 'month':
                    fromDate = new Date(today.getFullYear(), today.getMonth(), 1).toISOString().split('T')[0];
                    toDate = today.toISOString().split('T')[0];
                    break;
                case 'year':
                    fromDate = new Date(today.getFullYear(), 0, 1).toISOString().split('T')[0];
                    toDate = today.toISOString().split('T')[0];
                    break;
            }
            
            dateFromInput.value = fromDate;
            dateToInput.value = toDate;
        }

        function clearDates() {
            document.getElementById('date_from').value = '';
            document.getElementById('date_to').value = '';
        }

        // Date validation
        document.getElementById('date_from').addEventListener('change', function() {
            const dateFrom = this.value;
            const dateTo = document.getElementById('date_to').value;
            
            if (dateFrom && dateTo && dateFrom > dateTo) {
                alert('Start date cannot be later than end date');
                this.value = '';
            }
        });

                 document.getElementById('date_to').addEventListener('change', function() {
             const dateFrom = document.getElementById('date_from').value;
             const dateTo = this.value;
             
             if (dateFrom && dateTo && dateFrom > dateTo) {
                 alert('End date cannot be earlier than start date');
                 this.value = '';
             }
         });

         // Email search functionality with database queries
         let searchTimeout;
         let currentSearchTerm = '';
         let searchPagination = null;

         function handleSearchKeyup(event) {
             // If Enter key is pressed, submit immediately
             if (event.key === 'Enter') {
                 event.preventDefault();
                 submitEmailSearch();
                 return;
             }
             
             // Otherwise, use debounced search
             filterPaymentsByEmail();
         }

         function submitEmailSearch() {
             const searchTerm = document.getElementById('emailSearch').value.trim();
             
             // Clear any pending timeout
             if (searchTimeout) {
                 clearTimeout(searchTimeout);
             }

             // If empty search, reload page to show all payments
             if (searchTerm === '') {
                 if (currentSearchTerm !== '') {
                     location.reload();
                 }
                 return;
             }

             // Perform immediate search
             performDatabaseSearch(searchTerm, 1);
         }

         function filterPaymentsByEmail() {
             const searchTerm = document.getElementById('emailSearch').value.trim();
             
             // Clear previous timeout
             if (searchTimeout) {
                 clearTimeout(searchTimeout);
             }

             // If empty search, reload page to show all payments
             if (searchTerm === '') {
                 if (currentSearchTerm !== '') {
                     location.reload();
                 }
                 return;
             }

             // Debounce search to avoid too many requests (for typing)
             searchTimeout = setTimeout(() => {
                 performDatabaseSearch(searchTerm, 1);
             }, 800);
         }

         async function performDatabaseSearch(email, page = 1) {
             try {
                 currentSearchTerm = email;
                 console.log('Starting search for email:', email, 'page:', page);
                 
                 // Show loading state
                 showLoadingState(true);
                 
                 const searchUrl = `/admin/api/payments/search?email=${encodeURIComponent(email)}&page=${page}`;
                 console.log('Search URL:', searchUrl);
                 
                 const response = await fetch(searchUrl);
                 console.log('Response status:', response.status);
                 
                 if (!response.ok) {
                     throw new Error(`HTTP error! status: ${response.status}`);
                 }
                 
                 const data = await response.json();
                 console.log('Search response:', data);
                 
                 if (data.success) {
                     searchPagination = data.pagination;
                     updatePaymentsTable(data.payments);
                     updateSearchResults(data.pagination.totalPayments);
                     updateSearchPagination(data.pagination, email);
                     console.log('Search completed successfully. Found:', data.pagination.totalPayments, 'payments');
                 } else {
                     console.error('Search failed:', data.message);
                     showErrorMessage(data.message || 'Search failed');
                 }
             } catch (error) {
                 console.error('Search error:', error);
                 showErrorMessage(`Network error: ${error.message}`);
             } finally {
                 showLoadingState(false);
             }
         }

         function updatePaymentsTable(payments) {
             const tableBody = document.getElementById('paymentsTableBody');
             
             if (payments.length === 0) {
                 tableBody.innerHTML = `
                     <tr>
                         <td colspan="8" class="text-center py-4">
                             <i class="fas fa-search fa-2x text-muted mb-2"></i>
                             <div class="h5 text-muted">No payments found</div>
                             <p class="text-muted mb-0">No payments found for the specified email</p>
                         </td>
                     </tr>
                 `;
                 return;
             }

             let tableHTML = '';
             payments.forEach(payment => {
                 const createdDate = payment.created_at ? new Date(payment.created_at).toLocaleDateString('en-GB', {
                     year: 'numeric',
                     month: 'short',
                     day: 'numeric',
                     hour: '2-digit',
                     minute: '2-digit'
                 }) : 'N/A';

                 tableHTML += `
                     <tr>
                         <td>
                             <span class="badge bg-info">
                                 <i class="fas fa-database me-1"></i>
                                 ${payment.database_name || 'N/A'}
                             </span>
                         </td>
                         <td>
                             <span class="badge bg-secondary">
                                 <i class="fas fa-globe me-1"></i>
                                 ${payment.domain_name || 'N/A'}
                             </span>
                         </td>
                         <td>
                             <div>
                                 <div class="fw-semibold">${payment.user_name || 'N/A'}</div>
                                 <small class="text-muted">${payment.user_email || 'N/A'}</small>
                             </div>
                         </td>
                         <td class="fw-bold text-success">${(payment.amount || 0).toLocaleString()} BDT</td>
                         <td>
                             <span class="badge bg-info">
                                 ${payment.method ? payment.method.toUpperCase() : 'N/A'}
                             </span>
                         </td>
                         <td><code>${payment.transaction_id || 'N/A'}</code></td>
                         <td>${createdDate}</td>
                         <td>
                             <span class="badge bg-success">
                                 <i class="fas fa-check me-1"></i>COMPLETED
                             </span>
                         </td>
                     </tr>
                 `;
             });
             
             tableBody.innerHTML = tableHTML;
         }

         function updateSearchResults(totalResults) {
             const searchResultsInfo = document.getElementById('searchResultsInfo');
             const searchResultsCount = document.getElementById('searchResultsCount');
             
             searchResultsCount.textContent = totalResults;
             searchResultsInfo.style.display = 'block';
         }

         function updateSearchPagination(pagination, email) {
             const originalPagination = document.querySelector('.pagination').closest('.d-flex');
             originalPagination.style.display = 'none';
             
             let searchPaginationDiv = document.getElementById('searchPagination');
             if (!searchPaginationDiv) {
                 searchPaginationDiv = document.createElement('div');
                 searchPaginationDiv.id = 'searchPagination';
                 searchPaginationDiv.className = 'd-flex justify-content-between align-items-center mt-3';
                 originalPagination.parentNode.insertBefore(searchPaginationDiv, originalPagination.nextSibling);
             }

             if (pagination.totalPages <= 1) {
                 searchPaginationDiv.style.display = 'none';
                 return;
             }

             searchPaginationDiv.style.display = 'flex';
             searchPaginationDiv.innerHTML = `
                 <div class="text-muted">
                     Showing ${(pagination.currentPage - 1) * pagination.limit + 1} to 
                     ${Math.min(pagination.currentPage * pagination.limit, pagination.totalPayments)}
                     of ${pagination.totalPayments} search results
                 </div>
                 <nav>
                     <ul class="pagination mb-0">
                         ${pagination.hasPrev ? 
                             `<li class="page-item">
                                 <a class="page-link" href="#" onclick="performDatabaseSearch('${email}', ${pagination.prevPage}); return false;">
                                     <i class="fas fa-chevron-left"></i> Previous
                                 </a>
                             </li>` : 
                             `<li class="page-item disabled">
                                 <span class="page-link"><i class="fas fa-chevron-left"></i> Previous</span>
                             </li>`
                         }
                         
                         ${Array.from({length: Math.min(5, pagination.totalPages)}, (_, i) => {
                             const startPage = Math.max(1, pagination.currentPage - 2);
                             const pageNum = startPage + i;
                             if (pageNum <= pagination.totalPages) {
                                 return `<li class="page-item ${pageNum === pagination.currentPage ? 'active' : ''}">
                                     <a class="page-link" href="#" onclick="performDatabaseSearch('${email}', ${pageNum}); return false;">
                                         ${pageNum}
                                     </a>
                                 </li>`;
                             }
                             return '';
                         }).join('')}
                         
                         ${pagination.hasNext ? 
                             `<li class="page-item">
                                 <a class="page-link" href="#" onclick="performDatabaseSearch('${email}', ${pagination.nextPage}); return false;">
                                     Next <i class="fas fa-chevron-right"></i>
                                 </a>
                             </li>` : 
                             `<li class="page-item disabled">
                                 <span class="page-link">Next <i class="fas fa-chevron-right"></i></span>
                             </li>`
                         }
                     </ul>
                 </nav>
             `;
         }

         function showLoadingState(show) {
             const tableBody = document.getElementById('paymentsTableBody');
             
             if (show) {
                 tableBody.innerHTML = `
                     <tr>
                         <td colspan="8" class="text-center py-4">
                             <div class="spinner-border text-primary" role="status">
                                 <span class="visually-hidden">Loading...</span>
                             </div>
                             <div class="mt-2">Searching payments...</div>
                         </td>
                     </tr>
                 `;
             }
         }

         function showErrorMessage(message) {
             const tableBody = document.getElementById('paymentsTableBody');
             tableBody.innerHTML = `
                 <tr>
                     <td colspan="8" class="text-center py-4">
                         <i class="fas fa-exclamation-triangle fa-2x text-danger mb-2"></i>
                         <div class="h5 text-danger">Search Error</div>
                         <p class="text-muted mb-0">${message}</p>
                     </td>
                 </tr>
             `;
         }

         function clearEmailSearch() {
             document.getElementById('emailSearch').value = '';
             currentSearchTerm = '';
             
             // Hide search results info and pagination
             document.getElementById('searchResultsInfo').style.display = 'none';
             const searchPaginationDiv = document.getElementById('searchPagination');
             if (searchPaginationDiv) {
                 searchPaginationDiv.style.display = 'none';
             }
             
             // Show original pagination
             const originalPagination = document.querySelector('.pagination').closest('.d-flex');
             originalPagination.style.display = 'flex';
             
             // Reload page to show all payments
             location.reload();
         }
    </script>
</body>
</html> 